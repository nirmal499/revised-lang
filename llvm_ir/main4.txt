; ModuleID = 'trylang'
source_filename = "trylang"

@a = global [16 x i8] c"Hello, LLVM IR!\00"
@VERSION = global i32 648
@0 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@1 = private unnamed_addr constant [6 x i8] c"block\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @fgets(i8*, i32, i8*)

define i32 @showA() {
entry:
  %a = load [16 x i8], [16 x i8]* @a, align 1
  %0 = call i32 (i8*, ...) @printf([16 x i8] %a)
  ret i32 1
}

define i32 @main() {
entry:
  %a = alloca i8*, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i32 0, i32 0), i8** %a, align 8
  %0 = call i32 @showA()
  %1 = call i32 @showA()
  ret i32 0
}
