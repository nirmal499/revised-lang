; ModuleID = 'trylang'
source_filename = "trylang"

@falseConstantStringVALUE = global [6 x i8] c"false\00"
@trueConstantStringVALUE = global [5 x i8] c"true\00"
@VERSION = global i32 648
@0 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@1 = private unnamed_addr constant [6 x i8] c"block\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @fgets(i8*, i32, i8*)

declare i32 @strlen(i8*)

declare i32 @atoi(i8*)

declare i32 @itoa(i8*)

define i32 @showA(i8* %a) {
entry:
  %a1 = alloca i8*, align 8
  store i8* %a, i8** %a1, align 8
  %a2 = load i8*, i8** %a1, align 8
  %0 = call i32 (i8*, ...) @printf(i8* %a2)
  ret i32 1
}

define i32 @main() {
entry:
  %a = alloca i8*, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i32 0, i32 0), i8** %a, align 8
  %a1 = load i8*, i8** %a, align 8
  %0 = call i32 @showA(i8* %a1)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8** %a, align 8
  %a2 = load i8*, i8** %a, align 8
  %1 = call i32 @showA(i8* %a2)
  ret i32 0
}
