; ModuleID = 'trylang'
source_filename = "trylang"

@number = global i32 7
@falseConstantStringVALUE = global [6 x i8] c"false\00"
@trueConstantStringVALUE = global [5 x i8] c"true\00"
@VERSION = global i32 648
@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [20 x i8] c" is even, skipping.\00", align 1
@2 = private unnamed_addr constant [6 x i8] c"Doing\00", align 1
@3 = private unnamed_addr constant [25 x i8] c"Found the target number \00", align 1
@4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@5 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@6 = private unnamed_addr constant [27 x i8] c" is not the target number.\00", align 1
@7 = private unnamed_addr constant [6 x i8] c"Hello\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @fgets(i8*, i32, i8*)

declare i32 @strlen(i8*)

declare i32 @atoi(i8*)

declare i32 @snprintf(i8*, i64, i8*, ...)

declare i8* @malloc(i64)

declare i8* @strcat(i8*, i8*)

declare i8* @strcpy(i8*, i8*)

define i32 @main() {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %cond

cond:                                             ; preds = %ifend9, %entry
  %i1 = load i32, i32* %i, align 4
  %tmpcmp = icmp ule i32 %i1, 10
  br i1 %tmpcmp, label %body, label %loopend

body:                                             ; preds = %then, %cond
  %i2 = load i32, i32* %i, align 4
  %tmpdiv = sdiv i32 %i2, 2
  %tmpcmp3 = icmp eq i32 %tmpdiv, 0
  br i1 %tmpcmp3, label %then, label %ifend

then:                                             ; preds = %body
  %i4 = load i32, i32* %i, align 4
  %buffer = alloca i8, i32 32, align 1
  %formattedString = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %buffer, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32 %i4)
  %leftLen = call i32 @strlen(i8* %buffer)
  %rightLen = call i32 @strlen(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1, i32 0, i32 0))
  %totalLen = add i32 %leftLen, %rightLen
  %totalLenWithNull = add i32 %totalLen, 1
  %totalLenI64 = zext i32 %totalLenWithNull to i64
  %rawPtrBuffer = call i8* @malloc(i64 %totalLenI64)
  %0 = call i8* @strcpy(i8* %rawPtrBuffer, i8* %buffer)
  %1 = call i8* @strcat(i8* %rawPtrBuffer, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1, i32 0, i32 0))
  %2 = call i32 (i8*, ...) @printf(i8* %rawPtrBuffer)
  %i5 = load i32, i32* %i, align 4
  %tmpadd = add i32 %i5, 1
  store i32 %tmpadd, i32* %i, align 4
  br label %body

ifend:                                            ; preds = %body
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i32 0, i32 0))
  %i6 = load i32, i32* %i, align 4
  %number = load i32, i32* @number, align 4
  %tmpcmp7 = icmp eq i32 %i6, %number
  br i1 %tmpcmp7, label %then8, label %else

then8:                                            ; preds = %ifend
  %i10 = load i32, i32* %i, align 4
  %buffer11 = alloca i8, i32 32, align 1
  %formattedString12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %buffer11, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i32 0, i32 0), i32 %i10)
  %leftLen13 = call i32 @strlen(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @3, i32 0, i32 0))
  %rightLen14 = call i32 @strlen(i8* %buffer11)
  %totalLen15 = add i32 %leftLen13, %rightLen14
  %totalLenWithNull16 = add i32 %totalLen15, 1
  %totalLenI6417 = zext i32 %totalLenWithNull16 to i64
  %rawPtrBuffer18 = call i8* @malloc(i64 %totalLenI6417)
  %4 = call i8* @strcpy(i8* %rawPtrBuffer18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @3, i32 0, i32 0))
  %5 = call i8* @strcat(i8* %rawPtrBuffer18, i8* %buffer11)
  %6 = call i32 (i8*, ...) @printf(i8* %rawPtrBuffer18)
  br label %loopend

else:                                             ; preds = %ifend
  %i19 = load i32, i32* %i, align 4
  %buffer20 = alloca i8, i32 32, align 1
  %formattedString21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %buffer20, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i32 0, i32 0), i32 %i19)
  %leftLen22 = call i32 @strlen(i8* %buffer20)
  %rightLen23 = call i32 @strlen(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @6, i32 0, i32 0))
  %totalLen24 = add i32 %leftLen22, %rightLen23
  %totalLenWithNull25 = add i32 %totalLen24, 1
  %totalLenI6426 = zext i32 %totalLenWithNull25 to i64
  %rawPtrBuffer27 = call i8* @malloc(i64 %totalLenI6426)
  %7 = call i8* @strcpy(i8* %rawPtrBuffer27, i8* %buffer20)
  %8 = call i8* @strcat(i8* %rawPtrBuffer27, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @6, i32 0, i32 0))
  %9 = call i32 (i8*, ...) @printf(i8* %rawPtrBuffer27)
  br label %ifend9

ifend9:                                           ; preds = %else
  %i28 = load i32, i32* %i, align 4
  %tmpadd29 = add i32 %i28, 1
  store i32 %tmpadd29, i32* %i, align 4
  br label %cond

loopend:                                          ; preds = %then8, %cond
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @7, i32 0, i32 0))
  ret i32 0
}
